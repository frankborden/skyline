/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const ToastLazyImport = createFileRoute('/toast')()
const TagLazyImport = createFileRoute('/tag')()
const TabLazyImport = createFileRoute('/tab')()
const SetupLazyImport = createFileRoute('/setup')()
const SelectLazyImport = createFileRoute('/select')()
const MenuLazyImport = createFileRoute('/menu')()
const InputLazyImport = createFileRoute('/input')()
const DialogLazyImport = createFileRoute('/dialog')()
const CardLazyImport = createFileRoute('/card')()
const ButtonLazyImport = createFileRoute('/button')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const ToastLazyRoute = ToastLazyImport.update({
  path: '/toast',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/toast.lazy').then((d) => d.Route))

const TagLazyRoute = TagLazyImport.update({
  path: '/tag',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/tag.lazy').then((d) => d.Route))

const TabLazyRoute = TabLazyImport.update({
  path: '/tab',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/tab.lazy').then((d) => d.Route))

const SetupLazyRoute = SetupLazyImport.update({
  path: '/setup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/setup.lazy').then((d) => d.Route))

const SelectLazyRoute = SelectLazyImport.update({
  path: '/select',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/select.lazy').then((d) => d.Route))

const MenuLazyRoute = MenuLazyImport.update({
  path: '/menu',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/menu.lazy').then((d) => d.Route))

const InputLazyRoute = InputLazyImport.update({
  path: '/input',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/input.lazy').then((d) => d.Route))

const DialogLazyRoute = DialogLazyImport.update({
  path: '/dialog',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/dialog.lazy').then((d) => d.Route))

const CardLazyRoute = CardLazyImport.update({
  path: '/card',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/card.lazy').then((d) => d.Route))

const ButtonLazyRoute = ButtonLazyImport.update({
  path: '/button',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/button.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/button': {
      id: '/button'
      path: '/button'
      fullPath: '/button'
      preLoaderRoute: typeof ButtonLazyImport
      parentRoute: typeof rootRoute
    }
    '/card': {
      id: '/card'
      path: '/card'
      fullPath: '/card'
      preLoaderRoute: typeof CardLazyImport
      parentRoute: typeof rootRoute
    }
    '/dialog': {
      id: '/dialog'
      path: '/dialog'
      fullPath: '/dialog'
      preLoaderRoute: typeof DialogLazyImport
      parentRoute: typeof rootRoute
    }
    '/input': {
      id: '/input'
      path: '/input'
      fullPath: '/input'
      preLoaderRoute: typeof InputLazyImport
      parentRoute: typeof rootRoute
    }
    '/menu': {
      id: '/menu'
      path: '/menu'
      fullPath: '/menu'
      preLoaderRoute: typeof MenuLazyImport
      parentRoute: typeof rootRoute
    }
    '/select': {
      id: '/select'
      path: '/select'
      fullPath: '/select'
      preLoaderRoute: typeof SelectLazyImport
      parentRoute: typeof rootRoute
    }
    '/setup': {
      id: '/setup'
      path: '/setup'
      fullPath: '/setup'
      preLoaderRoute: typeof SetupLazyImport
      parentRoute: typeof rootRoute
    }
    '/tab': {
      id: '/tab'
      path: '/tab'
      fullPath: '/tab'
      preLoaderRoute: typeof TabLazyImport
      parentRoute: typeof rootRoute
    }
    '/tag': {
      id: '/tag'
      path: '/tag'
      fullPath: '/tag'
      preLoaderRoute: typeof TagLazyImport
      parentRoute: typeof rootRoute
    }
    '/toast': {
      id: '/toast'
      path: '/toast'
      fullPath: '/toast'
      preLoaderRoute: typeof ToastLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  ButtonLazyRoute,
  CardLazyRoute,
  DialogLazyRoute,
  InputLazyRoute,
  MenuLazyRoute,
  SelectLazyRoute,
  SetupLazyRoute,
  TabLazyRoute,
  TagLazyRoute,
  ToastLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/button",
        "/card",
        "/dialog",
        "/input",
        "/menu",
        "/select",
        "/setup",
        "/tab",
        "/tag",
        "/toast"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/button": {
      "filePath": "button.lazy.tsx"
    },
    "/card": {
      "filePath": "card.lazy.tsx"
    },
    "/dialog": {
      "filePath": "dialog.lazy.tsx"
    },
    "/input": {
      "filePath": "input.lazy.tsx"
    },
    "/menu": {
      "filePath": "menu.lazy.tsx"
    },
    "/select": {
      "filePath": "select.lazy.tsx"
    },
    "/setup": {
      "filePath": "setup.lazy.tsx"
    },
    "/tab": {
      "filePath": "tab.lazy.tsx"
    },
    "/tag": {
      "filePath": "tag.lazy.tsx"
    },
    "/toast": {
      "filePath": "toast.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
